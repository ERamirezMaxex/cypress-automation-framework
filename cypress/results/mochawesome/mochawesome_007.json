{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-12-08T03:15:47.364Z",
    "end": "2024-12-08T03:15:49.809Z",
    "duration": 2445,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6cee65f2-130a-49b8-8e93-f087c79f27e4",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a869b1d9-5365-4cf4-a559-f32104c8d700",
          "title": "Verify autocomplete dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product via autocomplete list",
              "fullTitle": "Verify autocomplete dropdown list via webdriveruni Select specific product via autocomplete list",
              "timedOut": null,
              "duration": 2426,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\");\ncy.get('#autocomplete-textfield').invoke('removeAttr', 'target').click({\n  force: true\n});\ncy.get('#myInput').type('A');\ncy.get('#myInputautocomplete-list > *').each(($element, index, $list) => {\n  const currentProduct = $element.text();\n  const productToSelect = 'Avocado'; // Correct the spelling\n  if (currentProduct === productToSelect) {\n    cy.get($element).click();\n    cy.get('#submit-button').click();\n    cy.url().should('contain', 'Avocado');\n  }\n}).then(() => {\n  cy.get('#myInput').clear();\n  cy.get('#myInput').type('G');\n  cy.get('#myInputautocomplete-list > *').each(($element, index, $list) => {\n    const currentProduct = $element.text();\n    const productToSelect = 'Grapes';\n    if (currentProduct === productToSelect) {\n      cy.get($element).click();\n      cy.get('#submit-button').click();\n      cy.url().should('contain', 'Grapes');\n    }\n  }); // Close the second each loop properly\n});",
              "err": {},
              "uuid": "2ca44e4a-ee46-40a7-9640-e441286f2346",
              "parentUUID": "a869b1d9-5365-4cf4-a559-f32104c8d700",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ca44e4a-ee46-40a7-9640-e441286f2346"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2426,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}